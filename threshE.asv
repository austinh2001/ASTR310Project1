function [threshold_image, pixel_angular_area] = threshE(im,col,row,rad1,rad2,degrees_angle,noise_region,numOfSigma)

%{
AperE Original code by Professor Andrew Harris. Edited by Alyssa Pagan
%} 

%{
ThreshE adaptations from AperE by Team CANS
%}

%Find the threshold value, as determined by the noise region
threshold = calculateThreshold(im,noise_region,numOfSigma);
threshold_image = zeros(size(im));

[a,b]=size(im);
[xx,yy]=meshgrid(1:b,1:a);

% Figure out how to rotate the ellipse in this context
alpha = degrees_angle * (pi/180);
ixsrc=(((cos(alpha).*(xx-col)+sin(alpha).*(yy-row))./rad1).^2+(((sin(alpha).*(xx-col)-cos(alpha).*(yy-row))./rad2).^2))<=1;
pixel_count = 0;
display("a*b: " + string(a*b))
for i=1:a
    for j=1:b
        if(im(i,j) >= threshold && ixsrc(i,j))
            pixel_count = pixel_count + 1;
            threshold_image(i,j) = im(i,j);
        end
    end
end
display("Percentage of total pixels: "+ string(pixel_count/(a*b)))
% mm
focal_length = 154 * 25.4;
% arc second/ mm
plate_scale = 206265/focal_length;
% arc second^2/mm^2
plate_scale_area = plate_scale^2;
% mm/pixel_side
pixel_scale = 0.009;
% mm^2/pixel_side^2
pixel_area = pixel_scale^2;

% mm^2
total_pixel_area = pixel_area*pixel_count;

% arc second^2
total_pixel_area = total_pixel_area * plate_scale_area
display("Total Angular Area: " total_pixel_area)
end

